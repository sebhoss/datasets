h1. Datasets "!https://secure.travis-ci.org/sebhoss/datasets.png!":http://travis-ci.org/sebhoss/datasets "!https://www.ohloh.net/p/datasets/widgets/project_thin_badge.gif!":https://www.ohloh.net/p/datasets/

p. Collection of datasets, intended to be used inside of tests. **DEPRECATED: Use "Java 8 Random.doubles()":http://docs.oracle.com/javase/8/docs/api/java/util/Random.html#doubles--, etc**

h2. Usage

p. Create random integers or longs:

bc. // Create 100 random integers between Integer.MIN_VALUE and Integer.MAX_VALUE
int[] numbers = Datasets.ints()
        .build();

bc. // Create 10 random longs between -250 and 250
long[] numbers = Datasets.longs()
        .lowestInclusive(-250)
        .highestInclusive(250)
        .numbersToCreate(10)
        .build();

bc. // Create 100 random floats between 0 and Integer.MAX_VALUE using '42' as seed
float[] numbers = Datasets.floats()
        .lowestInclusive(0)
        .seed(42)
        .build();
        
bc. // Create 100 random doubles between Integer.MIN_VALUE and 0 using '42' as seed
double[] numbers = Datasets.doubles()
        .highestInclusive(0)
        .seed(42)
        .build();

h2. Integration

p. This project is uploaded into Maven Central. "Take a look":http://search.maven.org/#search%7Cga%7C1%7Cg%3Acom.github.sebhoss%20a%3Adatasets for the latest version.

bc. 
<dependency>
  <groupId>com.github.sebhoss</groupId>
  <artifactId>datasets</artifactId>
  <version>${version.datasets}</version>
  <scope>test</scope>
</dependency>


h2. Development

h3. License

p. This program is free software. It comes without any warranty, to the extent permitted by applicable law. You can redistribute it and/or modify it under the terms of the Do What The Fuck You Want To Public License, Version 2, as published by Sam Hocevar. See LICENSE or "http://www.wtfpl.net/":http://www.wtfpl.net/ for more details.

h3. Setup

p. This projects uses "Java":http://www.java.com/, "Maven":http://maven.apache.org/ and "Git":http://git-scm.com/ as the main development tools. To build the project yourself just download & install at least Maven 3.0 and call *mvn install* inside the project folder. Maven should then proceed to clean, build, package and install this project.

h3. Versioning

p. This project follows the "semantic versioning":http://semver.org/ guidelines.
